{{- if .Values.adotCollector.daemonSet.enabled }}
# ADOT Collector as a DaemonSet for deployment.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "adotCollector.daemonSet.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.adotCollector.daemonSet.daemonSetName }}
      {{- include "adotCollector.daemonSet.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        name: {{ .Values.adotCollector.daemonSet.daemonSetName }}
        {{- include "adotCollector.daemonSet.labels" . | indent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/adot-collector/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: adot-collector
          image: "{{ .Values.adotCollector.image.repository }}:{{ .Values.adotCollector.image.tag }}"
          imagePullPolicy: {{ .Values.adotCollector.image.daemonSetPullPolicy }}
          env:
            {{- toYaml .Values.adotCollector.daemonSet.env | nindent 12}}
            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: "spec.nodeName"
            - name: "HOST_IP"
              valueFrom:
                fieldRef:
                  fieldPath: "status.hostIP"
            - name: "K8S_POD_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.name"
            - name: "HOST_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: "spec.nodeName"
            - name: "K8S_NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
          command:
            - "/awscollector"
            - "--config=/conf/adot-config.yaml"
          volumeMounts:
            {{- toYaml .Values.adotCollector.daemonSet.volumeMounts | nindent 12 }}
            - name: "rootfs"
              mountPath: "/rootfs"
              readOnly: true
            - name: "dockersock"
              mountPath: "/var/run/docker.sock"
              readOnly: true
            - name: "varlibdocker"
              mountPath: "/var/lib/docker"
              readOnly: true
            - name: "containerdsock"
              mountPath: "/run/containerd/containerd.sock"
              readOnly: true
            - name: "sys"
              mountPath: "/sys"
              readOnly: true
            - name: "devdisk"
              mountPath: "/dev/disk"
              readOnly: true
            - name: "adot-config-vol"
              mountPath: "/conf"
          resources:
            limits:
              cpu: "200m"
              memory: "200Mi"
            requests:
              cpu: "200m"
              memory: "200Mi"
      volumes:
        {{- toYaml .Values.adotCollector.daemonSet.volumes | nindent 10 }}
        - configMap:
            name: "adot-conf"
            items:
              - key: "adot-config"
                path: "adot-config.yaml"
          name: "adot-config-vol"
        - name: "rootfs"
          hostPath:
            path: "/"
        - name: "dockersock"
          hostPath:
            path: "/var/run/docker.sock"
        - name: "varlibdocker"
          hostPath:
            path: "/var/lib/docker"
        - name: "containerdsock"
          hostPath:
            path: "/run/containerd/containerd.sock"
        - name: "sys"
          hostPath:
            path: "/sys"
        - name: "devdisk"
          hostPath:
            path: "/dev/disk/"
      serviceAccountName: {{ .Values.adotCollector.daemonSet.serviceAccount.name  }}
      tolerations:
        {{- toYaml .Values.adotCollector.daemonSet.tolerations | nindent 8 }}
{{- end }}
